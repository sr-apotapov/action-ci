name: 'Terraform Module'
description: 'TF fmt & init & plan'
inputs:
  terraform_version:
    description: 'tf version'
    required: false
    default: '0.13.6'
  cli_config_credentials_token:
    description: 'The API token for a Terraform Cloud/Enterprise instance to place within the credentials block of the Terraform CLI configuration file.'
    required: true
outputs:
  tfplan_output:
    description: 'tf plan output'
    value: ${{ steps.tf_plan.outputs.tfplan_output }}
  tfplan_summary:
    description: 'tf plan output for summary'
    value: ${{ steps.tf_plan_cleanup.outputs.plancontent }}
  tffmt_cleanup:
    description: 'tf plan output for summary'
    value: ${{ steps.tffmt_cleanup.outputs.fmtcontent }}
runs:
  using: "composite"
  steps:
    # - id: envs 
    #   run: |
    #     export RUNNER_TEMP="/tmp"
    #     export terraform_version="${{ inputs.terraform_version }}"
    #   shell: bash
    # - id: set_credentials
    #   shell: bash
    #   run: |
    #     echo 'credentials "app.terraform.io" {
    #             token = "$TOKEN"
    #           }' > ~/.terraformrc
    #   env:
    #     TF_TOKEN: cli_config_credentials_token
    # - id: tf_install  
    #   run: |
    #     wget -q https://releases.hashicorp.com/terraform/"$TERRAFORM_VERSION"/terraform_"$TERRAFORM_VERSION"_linux_amd64.zip
    #     mkdir tf_src
    #     unzip -o terraform_"$TERRAFORM_VERSION"_linux_amd64.zip -d tf_src
    #     chmod +x tf_src/terraform
    #     sudo mv tf_src/terraform /usr/local/bin/
    #   shell: bash
    #   env: 
    #     TERRAFORM_VERSION: ${{ inputs.terraform_version }}
    - id: tf_version
      run: terraform version
      shell: bash
    # - id: tf_folder
    #   run: terraform -chdir=./terraform apply
    #   shell: bash
    - id: tf_fmt
      working-directory: terraform
      run: terraform fmt -check -diff
      shell: bash
    - id: tffmt_cleanup
      run: |
        fmtcontent="${{ steps.tf_fmt.output }}"
        fmtcontent="${fmtcontent//'%'/'%25'}"
        fmtcontent="${fmtcontent//$'%\n'/'%0A'}"
        fmtcontent="${fmtcontent//$'\r'/'%0D'}"
        fmtcontent="${fmtcontent//$'$'/'\$'}"
        fmtcontent="${fmtcontent//$'`'/'%60'}"
        echo "::set-output name=fmtcontent::$fmtcontent"        
      shell: bash
    - id: tf_init
      working-directory: terraform
      run: terraform init
      shell: bash
    - id: tf_plan
      working-directory: terraform
      run: |
        plan_output=$("terraform plan -no-color")
        echo "::set-output name=tfplan_output::$plan_output"
      shell: bash
    - id: tf_plan_cleanup
      run: |
        plancontent="$plan_output"
        plancontent="${plancontent//'%'/'%25'}"
        plancontent="${plancontent//$'%\n'/'%0A'}"
        plancontent="${plancontent//$'\r'/'%0D'}"
        plancontent="${plancontent//$'$'/'\$'}"
        plancontent="${plancontent//$'\`'/'%60'}"
        echo "::set-output name=plancontent::$plancontent"        
      shell: bash
