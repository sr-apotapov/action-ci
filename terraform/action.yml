name: 'Terraform Module'
description: 'TF fmt & init & plan'
inputs:
  terraform_version:
    description: 'tf version'
    required: false
    default: '0.13.6'
  cli_config_credentials_token:
    description: 'The API token for a Terraform Cloud/Enterprise instance to place within the credentials block of the Terraform CLI configuration file.'
    required: true
outputs:
  tfplan_output:
    description: 'tf plan output'
    value: ${{ steps.tf_plan.outputs.tfplan }}
  tfplan_summary:
    description: 'tf plan output for summary'
    value: ${{ steps.tf_plan.outputs.tfplan }}

runs:
  using: "composite"
  steps:
    - id: envs 
      run: |
        export RUNNER_TEMP="/tmp"
        export terraform_version="${{ inputs.terraform_version }}"
      shell: bash
    - id: set_credentials
      shell: bash
      run: |
        echo 'credentials "app.terraform.io" {
                token = "$TOKEN"
              }' > ~/.terraformrc
      env:
        TF_TOKEN: cli_config_credentials_token
    - id: tf_install  
      run: |
        wget https://releases.hashicorp.com/terraform/$terraform_version/terraform_$terraform_version_linux_amd64.zip
        unzip terraform_$terraform_version_linux_amd64.zip
        chmod +x terraform
        sudo mv terraform /usr/local/bin/
      shell: bash
      env: 
        terraform_version: ${{ inputs.terraform_version }}
    - id: tf_version
      run: terraform version
      shell: bash
    - id: tf_folder
      run: terraform -chdir=./terraform apply
      shell: bash
    - id: tf_fmt
      run: terraform fmt -check -diff
      shell: bash
    - id: tf_init
      run: terraform init
      shell: bash
    - id: tf_plan
      run: |
        plan_output=$("terraform plan -no-color")
        echo "::set-output name=tfplan_output::$plan_output"
      shell: bash
    - id: tf_plan_cleanup
      run: |
        logcontent="$plan_output"
        logcontent="${logcontent//'%'/'%25'}"
        logcontent="${logcontent//$'%\n'/'%0A'}"
        logcontent="${logcontent//$'\r'/'%0D'}"
        logcontent="${logcontent//$'$'/'\$'}"
        logcontent="${logcontent//$'`'/'%60'}"
        echo "::set-output name=content::$logcontent"        
      shell: bash
