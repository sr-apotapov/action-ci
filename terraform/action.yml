name: 'Terraform Module'
description: 'TF fmt & init & plan'
outputs:
  fmt_summary:
    description: 'tf plan output for summary'
    value: ${{ steps.tf_fmt.outputs.fmt_summary }}
  tfplan_output:
    description: 'tf plan output'
    value: ${{ steps.terraform_plan.outputs.tfplan_output }}
  tfplan_summary:
    description: 'tf plan output for summary'
    value: ${{ steps.terraform_plan.outputs.tfplan_summary }}
runs:
  using: "composite"
  steps:
    - id: tf_version
      run: terraform version
      shell: bash
    - id: tf_fmt
      working-directory: terraform
      run: |
        terraform fmt -check -diff > fmt.txt
        fmt_summary=$(cat fmt.txt)
        fmt_summary="${fmt_summary//'%'/'%25'}"
        fmt_summary="${fmt_summary//$'\n'/'%0A'}"
        fmt_summary="${fmt_summary//$'\r'/'%0D'}"
        fmt_summary="${fmt_summary//$'$'/'\$'}"
        fmt_summary="${fmt_summary//$'\`'/'%60'}"
        echo "::set-output name=fmt_summary::$fmt_summary"    
      shell: bash

    - id: tf_init
      working-directory: terraform
      run: terraform init
      shell: bash
    - id: terraform_plan
      working-directory: terraform
      run: |
        terraform plan -no-color > plan.txt
        echo !!!CATTING THE PLAN!!!
        cat plan.txt
        TF_PLAN_ENV=$(cat plan.txt)
        TF_PLAN_ENV="${TF_PLAN_ENV//'%'/'%25'}"
        TF_PLAN_ENV="${TF_PLAN_ENV//$'\n'/'%0A'}"
        TF_PLAN_ENV="${TF_PLAN_ENV//$'\r'/'%0D'}"
        echo !!!ECHOING THE TF_PLAN_ENV!!!
        echo $TF_PLAN_ENV
        plancontent=$(cat plan.txt)
        plancontent="${plancontent//'%'/'%25'}"
        plancontent="${plancontent//$'\n'/'%0A'}"
        plancontent="${plancontent//$'\r'/'%0D'}"
        plancontent="${plancontent//$'$'/'\$'}"
        plancontent="${plancontent//$'\`'/'%60'}"
        echo "::set-output name=tfplan_summary::$plancontent"        
        echo "::set-output name=tfplan_output::$TF_PLAN_ENV"
      shell: bash
# https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#environment-files


# inputs:
#   terraform_version:
#     description: 'tf version'
#     required: false
#     default: '0.13.6'
#   cli_config_credentials_token:
#     description: 'The API token for a Terraform Cloud/Enterprise instance to place within the credentials block of the Terraform CLI configuration file.'
#     required: true
    # - id: envs 
    #   run: |
    #     export RUNNER_TEMP="/tmp"
    #     export terraform_version="${{ inputs.terraform_version }}"
    #   shell: bash
    # - id: set_credentials
    #   shell: bash
    #   run: |
    #     echo 'credentials "app.terraform.io" {
    #             token = "$TOKEN"
    #           }' > ~/.terraformrc
    #   env:
    #     TF_TOKEN: cli_config_credentials_token
    # - id: tf_install  
    #   run: |
    #     wget -q https://releases.hashicorp.com/terraform/"$TERRAFORM_VERSION"/terraform_"$TERRAFORM_VERSION"_linux_amd64.zip
    #     mkdir tf_src
    #     unzip -o terraform_"$TERRAFORM_VERSION"_linux_amd64.zip -d tf_src
    #     chmod +x tf_src/terraform
    #     sudo mv tf_src/terraform /usr/local/bin/
    #   shell: bash
    #   env: 
    #     TERRAFORM_VERSION: ${{ inputs.terraform_version }}