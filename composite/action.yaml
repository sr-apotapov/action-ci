name: 'CI Script'
description: 'CI Script'
inputs:
  terraform_version:
    description: 'Who to greet'
    required: false
    default: '0.13.5'
  cli_config_credentials_token:
    description: 'The API token for a Terraform Cloud/Enterprise instance to place within the credentials block of the Terraform CLI configuration file.'
    required: false
  token:
    description: 'GITHUB_TOKEN'
    required: true
runs:
  using: "composite"
  steps:
    - id: envs
      run: |
        export RUNNER_TEMP="/tmp" \
        export terraform_version="${{ inputs.terraform_version }}" \
        export cli_config_credentials_token="${{ inputs.cli_config_credentials_token }}" \
        export VALIDATE_ALL_CODEBASE="false" \
        export DEFAULT_BRANCH="master" \
        export FILTER_REGEX_INCLUDE=".*terraform/.*" \
        export GITHUB_TOKEN="${{ inputs.token }}" \
        export GITHUB_ORG="ShopRunner"
      shell: bash
    - id: git_clone
      run: git clone https://github.com/hashicorp/setup-terraform
      shell: bash
    - id: tf_install  
      run: node setup-terraform/dist/index.js
      shell: bash
    - id: super_linter #We can speed up the proccess (which takes at least few minutes to process by reworking the Docker image)
      run: |
          docker run -v ${{env.GITHUB_WORKSPACE}}:/tmp/lint ghcr.io/github/super-linter:v3.15.5
      shell: bash
    - id: tf_fmt
      run: terraform fmt -check terraform
      shell: bash
    - id: tf_init
      run: terraform init terraform
      shell: bash
    - id: tf_plan
      run: terraform plan -no-color terraform
      shell: bash
    - id: axios_install
      run: npm install axios@v0.21.0
      shell: bash
    # - id: Policy - Read Plan
    #   run: |
    #     const fs = require('fs');
    #     const axios = require(`${process.env.GITHUB_WORKSPACE}/node_modules/axios`);
    #     const planOutput = `${{ steps.plan.outputs.stdout }}`;
    #     const urlRegex = /app\.terraform\.io\/app\/shoprunner\/[A-Za-z0-9\-]*\/runs\/run\-[A-Za-z0-9]*/;
    #     const match = planOutput.match(urlRegex);
    #     const urlSplit = match[0].split('/');
    #     const planApiUrl = `https://app.terraform.io/api/v2/runs/${urlSplit[urlSplit.length - 1]}/plan`
    #     const planResult = await axios.request(planApiUrl, {
    #       headers: {
    #         accept: 'application/json',
    #         authorization: `Bearer ${{ secrets.TF_API_TOKEN }}`
    #       }
    #     });
    #     const apiUrl = `https://app.terraform.io${planResult.data.data.links['json-output']}`;
    #     const result = await axios.request(apiUrl, {
    #       headers: {
    #         accept: 'application/json',
    #         authorization: `Bearer ${{ secrets.TF_API_TOKEN }}`
    #       }
    #     });
    #     const tfplan = result.data;
    #     const tfplanOutput = JSON.stringify(tfplan);
    #     fs.writeFileSync('tfplan.json', tfplanOutput);
    #     return tfplanOutput;
    #   shell: bash